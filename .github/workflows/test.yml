name: Core Repo Tests

on:
  push:
    branches-ignore:
    - 'release/*'
  pull_request:
env:
  # Set variable to 'main' if your change will not affect Contrib.
  # Otherwise, set variable to the commit of your branch on
  # opentelemetry-python-contrib which is compatible with these Core repo
  # changes.
  CONTRIB_REPO_SHA: 1a984d3ba18d4080c58485b7d807dba241179d41
  # This is needed because we do not clone the core repo in contrib builds anymore.
  # When running contrib builds as part of core builds, we use actions/checkout@v2 which
  # does not set an environment variable (simply just runs tox), which is different when
  # contrib builds are run directly from contrib (since test.yml is executed, which sets CORE_REPO_SHA)
  # The solution is to include CORE_REPO_SHA as part of THIS environment so it can be accessed
  # from within the contrib build.
  CORE_REPO_SHA: ${{ github.sha }}

jobs:
  build:
    env:
      # We use these variables to convert between tox and GHA version literals
      py311: "3.11"
      RUN_MATRIX_COMBINATION: ${{ matrix.python-version }}-${{ matrix.package }}-${{
        matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # ensures the entire test matrix is run, even if one permutation fails
      matrix:
        python-version: [py311]
        package: ["api"]
        os: [ubuntu-20.04]
    steps:
    - name: Checkout Core Repo @ SHA - ${{ github.sha }}
      uses: actions/checkout@v2
    - name: Set up Python ${{ env[matrix.python-version] }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env[matrix.python-version] }}
        architecture: 'x64'
    - name: Install tox
      run: pip install tox
    - name: Cache tox environment
        # Preserves .tox directory between runs for faster installs
      uses: actions/cache@v2
      with:
        path: |
          .tox
          ~/.cache/pip
        key: v4-tox-cache-${{ env.RUN_MATRIX_COMBINATION }}-${{ hashFiles('tox.ini',
          'dev-requirements.txt') }}-core
    - name: Windows does not let git check out files with long names
      if: ${{ matrix.os == 'windows-2019'}}
      run: git config --system core.longpaths true
    - name: run tox
      run: tox -f ${{ matrix.python-version }}-${{ matrix.package }} -- -ra --benchmark-json=${{
        env.RUN_MATRIX_COMBINATION }}-benchmark.json
    - name: Create SBOM
      uses: anchore/sbom-action@v0
